syt - synchronize things

1) Introduction
2) Installation
3) Creating a local repository
4) Synchronize with a remote repository
5) Testing
6) Release
7) License


-----------------------------------------------------------------------
Introduction

syt tries to be useful if you want the following:
* synchronize files via removable media
* detect errors (but not fix them) in tracked files


-----------------------------------------------------------------------
Installation

Install the dependencies:
$ apt install python-pysqlite2

Run within this directory:
$ pip3 install .


-----------------------------------------------------------------------
Creating a local repository

Create an empty repository:
$ mkdir repo_dir
$ syt init repo_dir

Put your files into the repository and add them so that they are
tracked:
$ cd repo_dir
$ syt add my/file.webm

See the current status of the repository:
$ syt status


-----------------------------------------------------------------------
Synchronize with a remote repository

Push all your files to a remote repository:
$ syt push /path/to/remote/repo

Push a singfe file by adding it's working directory path:
$ syt push /path/to/remote/repo my/file.webm

Pull files from a remote repository:
$ syt pull /path/to/remote/repo


-----------------------------------------------------------------------
Testing

Run the tests:
$ python3 -m unittest discover lib '*_spec.py'

Run an integration test:
$ cd test
$ ./crud.spec.sh


-----------------------------------------------------------------------
Release

Run the tests. Version bump in setup.py and commit version. Tag version
in git.


-----------------------------------------------------------------------
License

syt is licensed under the AGPL license. For more details see the
LICENSE file.
